from aiogram import Router,F,Bot
import app.keyboards as kb
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from app.states import HrWait
from aiogram.fsm.context import FSMContext
from config import HR_ID
from app.db import db


user = Router()

@user.message(CommandStart())
async def cmd_start(message: Message, bot: Bot):
    faqs = db.get_all_faqs()
    keyboard = kb.faq_keyboard(faqs)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å–≤—Ç—É—é, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ HR –æ—Ç–¥–µ–ª–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –¶–ò–¢-–ë–ê–†–°",
        reply_markup=keyboard
    )



@user.callback_query(F.data=='place')
async def place(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
    "üìç–ù–∞—à –æ—Ñ–∏—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n"
    "–ü—É—à–∫–∏–Ω—Å–∫–∞—è 268, –¥–æ–º–æ—Ñ–æ–Ω 52, 5 —ç—Ç–∞–∂")  
    await callback.message.answer_location(latitude=56.861316, longitude=53.209815)

@user.callback_query(F.data=='office')
async def place(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer( "<b>–í–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ –Ω–∞–π—Ç–∏ –≤—Ö–æ–¥:</b>\n"
    "<a href='https://vk.com/citbars?z=clip-152057105_456239094'>–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ</a>",
    parse_mode="HTML"
)

@user.callback_query(F.data=='ask_hr')
async def send_message(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –Ω–∞—à–µ–º—É –ª—É—á—à–µ–º—É HR")
    await state.set_state(HrWait.InputState)
    await callback.answer('')

@user.message(HrWait.InputState)
async def forward_to_hr(message: Message, state: FSMContext):
    text = f"üì©–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or message.from_user.full_name}:\n\n{message.text}"
    await message.bot.send_message(HR_ID,text)
    await message.answer("–ì–æ—Ç–æ–≤–æ! HR —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Çüòâ")
    await state.clear()   


@user.callback_query(F.data.startswith("faq_"))
async def handle_faq_callback(callback: CallbackQuery):
    faq_id = int(callback.data.split("_")[1])
    question, answer = db.get_faq_by_id(faq_id)
    await callback.message.answer(f"<b>{question}</b> \n\n üí¨{answer}", parse_mode="HTML")
    await callback.answer()